How Do You Improve?
******************
1. Devise a plan for solving.
2. Master common problem solving pattern.

Some Pattern:-
-------------

* Frequency Counter
* Multiple Pointers
* Sliding Window
* Divide and Conquer
* Dynamic programming
* Greedy Algorithm
* Backtracking

1. Frequency Counters 
->This pattern uses objects or sets to collect 
  values/Frequencies of values.

->This can often avoid the need for nested loop 
 or O(N^2) operations with arrays/String.

example:---
freqCounter.js
same_naive_solution.js
same_refactored_solution.js
validAnagram.js

2. Multiple Pointers
->Creating pointer or values that correspond to an index 
 or position and move towards the beginning, end or middle 
 based on a certain condition.

->very efficient for solving problems with minimal space complexity.

example:---
sumOfZero.js
sum_zero_naive.js
sum_zero_refactored.js
